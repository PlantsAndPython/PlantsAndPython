#!/usr/bin/env python
# coding: utf-8

# # 1.2 Indexaci√≥n
# 
# ## ¬øQu√© es la indexaci√≥n?
# - La indexaci√≥n tiene la forma de `[start:end]`
# - La indexaci√≥n siempre empieza en cero
# - El inicio es inclusivo
# - El final no es inclusivo
# - La indexaci√≥n se puede utilizar para acceder a caracteres espec√≠ficos en una cadena ("string", en ingl√©s) o lista

# **Mira este video de 3:35 a 9:10**
# 
# Para espa√±ol, haga click en configuraci√≥n, seleccione "espa√±ol" debajo de los subt√≠tulos.
# 
# Traducci√≥n por Alice Luckie (UNAM ENES Le√≥n, M√©xico)

# In[1]:


# Para reproducir el siguiente tutorial, presiona shift + enter

from IPython.display import YouTubeVideo
from datetime import timedelta
start=int(timedelta(hours=0, minutes=3, seconds=35).total_seconds())
end=int(timedelta(hours=0, minutes=9, seconds=10).total_seconds())

YouTubeVideo("4XIllJVnT4Y",start=start,end=end,width=640,height=360)


# ***La siguiente es una transcripci√≥n del video.***

# >üí° ***Recuerde:*** En los cuadernos anteriores, cre√≥ variables llamadas `genus` y `species`. Vuelva a crear las variables en la celda de abajo para completar esta lecci√≥n.

# In[2]:


# Crea la variable `genus`
# y la variable `species`

genus = "Vitis"
species = "_vinifera"


# As√≠ es como creas una variable. Esta es su primera introducci√≥n al primer tipo de datos en Python: una cadena es una colecci√≥n de caracteres.
# 
# Aprendamos un poco sobre indexaci√≥n. Indexaci√≥n es una forma de realizar un seguimiento de los caracteres de una cadena o de los elementos de una lista y de acceder a ellos, de lo cual aprenderemos pronto. La indexaci√≥n toma la forma de corchetes y tiene un valor inicial y un valor final separados por dos puntos. El primer elemento de una serie en Python siempre es cero. No es uno. Empieza en cero. Un valor inicial de indexaci√≥n es inclusivo. Es el n√∫mero en s√≠, pero lo que es m√°s importante, el valor final no es inclusivo. La indexaci√≥n sube hasta el valor final pero no lo incluye. 
#     
# As√≠ que recordemos: ten√≠amos nuestro g√©nero variable. Recuerda que asignamos es el valor de la cadena de `"Vitis"`. Intentemos acceder a la primera letra de esa cadena, la "V". Tu primera intuici√≥n podr√≠a ser que al principio para llegar al primer elemento dir√≠as "1". Entonces tomamos
# nuestro g√©nero variable, lo ponemos entre corchetes, y ponemos uno con la esperanza de recuperar el primer caracter. En su lugar, recuperamos el segundo car√°cter, la "i", no el primero, por lo que este es por qu√© es importante recordar que en Python el primer elemento para la indexaci√≥n siempre comienza en cero.

# In[3]:


# Recuerde, nuestra variable de g√©nero es "Vitis"
# Intentemos acceder al primer elemento
# Puede pensar que el primer elemento es 1

genus[1]


# Entonces, si ponemos entre corchetes, ponemos un cero y tenemos nuestra variable g√©nero, cuando usamos cero ahora recuperamos la primera letra, que era una "V" y puedes ver c√≥mo est√°s usando este n√∫mero para decir qu√© letra de la cadena desea recuperar. 

# In[4]:


# Pero en Python el primer elemento es siempre 0

genus[0]


# Tambi√©n podemos acceder a m√∫ltiples elementos en una cadena usando indexaci√≥n. Recuerde que la indexaci√≥n toma la forma de corchetes. Tiene un comienzo, dos puntos y un valor final. Recuerde que el comienzo es inclusivo y el final no es inclusivo. Sube al valor del final pero no lo incluye. As√≠ que intentemos recuperar todas las letras de "Vitis".
# 
# Hay cinco letras en "Vitis", por lo que podr√≠a pensar que necesitamos cinco posiciones a la derecha y recuerde que la indexaci√≥n comienza en cero, por lo que cinco posiciones ser√≠an cero, uno, dos, tres, cuatro. Tal vez para recuperar todo el "Vitis", vamos de cero a cuatro.
# 
# Y ese no es el caso, y recuerde que la raz√≥n es porque el valor de inicio es inclusivo, por lo que este ser√° un √≠ndice de 1, pero esto subir√° al valor de 4 pero no estar√° incluido. Por ejemplo, este es el elemento 0, 1, 2 y 3. El cuarto elemento es "s" pero no sube a cuatro, simplemente llega hasta √©l.

# In[5]:


# Tambi√©n podemos acceder a m√∫ltiples elementos usando indexaci√≥n
# La indexaci√≥n toma la forma de [inicio: final]
# El inicio es inclusivo
# El final no es inclusivo
# "Vitis" tiene cinco caracteres
# Para acceder a todo el mundo, tal vez deber√≠amos intentar:

genus[0:4]


# Y para recuperar todo valor de "Vitis" de nuestro g√©nero variable tenemos 
# que recordar que el final no es inclusivo. Vamos a ir hasta √©l pero no lo incluir√©. Entonces, si pasamos de 0 a 5, son 6 caracteres, pero recuerde que no incluye los cinco, simplemente va directo a √©l, y por eso obtenemos hasta la cuarta posici√≥n de la "s" e incl√∫yala ahora: cero, uno, dos, tres, cuatro, sin incluir cinco.

# In[6]:


# Pero recuerda, el final no es inclusivo
# Necesitamos agregar un valor m√°s para incluir el √∫ltimo car√°cter

genus[0:5]


# Dado que los caracteres de una cadena se pueden indexar, se les asignan valores. Puedes hacer aritm√©tica con cuerdas, lo crea o no. As√≠ que 
# creemos algunas variables m√°s para repasar para la siguiente secci√≥n y agreguemos el g√©nero m√°s la especie juntos. Vamos a crear una nueva variable ahora y llam√©mosla vino. Entonces, si creamos nuestra nueva variable, vino, y decimos que es igual al g√©nero que era "Vitis", recuerda, m√°s especie que es la cadena "_vinifera" podemos crear esa nueva variable y luego podemos imprimirla. Y veamos qu√© obtenemos. Luego, obtenemos "Vitis_vinifera" todos junto como uno porque los sumamos.

# In[7]:


# Debido a que los caracteres se pueden indexar, puede hacer artihm√©tica con cadenas!
# Creemos algunas variables m√°s para configurarnos para la siguiente secci√≥n
# Agreguemos `genus` + `species` y llamemos a la nueva variable "wine"

wine = genus + species

print(wine)


# Para la siguiente secci√≥n, creemos dos variables m√°s. Llamemos a un tequila, para estar en el mismo tema y viene de la planta "Agave_tequilana" y tenemos cerveza y eso viene de cebada, "Hordeum_vulgare". Y recuerde ejecutar esta celda para que podamos recuperar esas variables.

# In[8]:


# Creemos tambi√©n otras dos variables en el mismo tema

tequila = "Agave_tequilana"
beer = "Hordeum_vulgare"


# Entonces vamos imprima nuestras variables para asegurarse de que est√©n 
# bien y recuerda que podemos poner m√∫ltiples variables en nuestra funci√≥n de impresi√≥n entre par√©ntesis. Est√°n separados por una coma y luego obtenemos los valores de nuestras tres variables. Para el vino obtenemos "Vitis_vinifera"; tequila, "Agave_tequilana", y para cerveza, "Hordeum_vulgare". Uvas, agaves y cebada. Tenga en cuenta que tenemos nombres comunes para todos estos: uvas, agave y cebada, pero tenemos estos muy cient√≠ficos nombres en lat√≠n para estas especies y siempre hay algo llamado g√©nero, que es la primera palabra; y una segunda palabra, que se llama ep√≠teto de especie, y juntas definen una especie.

# In[9]:


# Imprimamos nuestras variables para comprobar que est√°n bien

print(wine, tequila, beer)

