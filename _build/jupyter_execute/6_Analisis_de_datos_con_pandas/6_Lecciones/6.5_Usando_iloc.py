#!/usr/bin/env python
# coding: utf-8

# # Lecci칩n 4.5

# ## C칩mo usar `iloc` para aislar datos dentro de un marco de datos (filas primero, columnas segundo, inicio:final y corchetes)
# ______

# ***Mira este video de 12:06 a 16:25***
# 
# Para espa침ol, haga click en configuraci칩n, seleccione "espa침ol" debajo de los subt칤tulos.
# 
# Traducci칩n por Guillermo Rodr칤guez Guerrero (UNAM ENES Le칩n, M칠xico).

# In[1]:


# Para reproducir el siguiente tutorial, presiona shift + enter

from IPython.display import YouTubeVideo
from datetime import timedelta
start=int(timedelta(hours=0, minutes=12, seconds=6).total_seconds())
end=int(timedelta(hours=0, minutes=16, seconds=25).total_seconds())

YouTubeVideo("jEQRU55x0e4",start=start,end=end,width=640,height=360)


# ***La siguiente es una transcripci칩n del video.***

# > 游눠 ***Recuerde:*** Importe `pandas` y lea el conjunto de datos a continuaci칩n para completar esta lecci칩n

# In[2]:


# Importe pandas

import pandas as pd


# In[3]:


# Decargue el conunto de datos del
# Jupyter Book para leer localmente o
# leer desde GitHub, a continuaci칩n:

data = pd.read_csv('https://raw.githubusercontent.com/DanChitwood/PlantsAndPython/master/co2_mlo_weekly.csv')


# A continuaci칩n, veamos otra forma de encontrar datos espec칤ficos. y esto se llama funci칩n "iloc". Y esto usar치 filas y columnas para encontrar los datos que quieres. Es algo as칤 como Excel, piensa en qu칠 filas y columnas deseas aislar de los datos. Lo puedes hacer, tanto para las filas como para las columnas, puedes usar la indexaci칩n con la notaci칩n de dos puntos de inicio y final que aprendiste antes. 
# 
# As칤 que repasemos de nuevo como se ven nuestros datos, recuerda que usamos "head", que solo trae de vuelta las primeras cinco columnas, pero lo m치s importante es que te da los nombres de las columnas. Y podemos ver que la primera columna es "date", la segunda columna es "running_date", la tercera columna es "month", la cuarta es "year", y la quinta es "CO2ppm".

# In[4]:


# Tambi칠n podemos acceder a filas y columnas espec칤ficas
# usando indexaci칩n con .iloc ()

# Veamos los datos nuevamente usando .head ()

data.head()


# Entonces, todo lo que necesita saber sobre "iloc" es que la primera posici칩n son las filas, la segunda posici칩n son las columnas, y puedes usar la indexaci칩n para filas y columnas. 
# 
# Entonces, si solo usamos "data.iloc" y solo ingresamosun n칰mero, es la ranura de las filas. Recuerda, la indexaci칩n comienza en cero, por lo que esto deber칤a devolvernos solo la primera fila de data.
# 
# Y t칰 puedes ver que esto es 13 de agosto de 2017, fecha de ejecuci칩n 1 , mes agosto, a침o 2017, y partes por mill칩n 405.2, que es la primera fila de data. Entonces, las filas y 
# luego el 칤ndice nos dan la primera fila de data.

# In[5]:


# La primera posici칩n en .iloc son las filas
# La segunda posici칩n en .iloc son las columnas
# Usamos indexaci칩n y dos puntos start:end
# para hacer referencia a qu칠 filas y columnas queremos

# La indexaci칩n comienza en 0, por lo que volvemos a la primera fila

data.iloc[0]


# Recuerda, uno negativo en la indexaci칩n es una forma de obtener el 칰ltimo elemento y, por lo tanto, si solo hacemos uno negativo
# de nuevo, posici칩n de la fila, y volvemos a la 칰ltima fila. Y puedes ver que es la 칰ltima fila porque tiene la fecha de ejecuci칩n de 714.

# In[6]:


# -1 con indexaci칩n es el 칰ltimo elemento
# devuelve la 칰ltima fila

data.iloc[-1]


# Podemos hacer referencia a filas y columnas, por lo que podr칤amos decir la 칰ltima fila, y recuerda, si solo ponemos dos puntos, que deber칤an tener el inicio y el final, pero no ponemos cualquier n칰mero, solo vamos a obtener todos los valores, por lo que esta ser치 la 칰ltima fila pero todas las columnas. Y de 
# hecho eso es lo que obtenemos: la 칰ltima fila, 714, pero todas las columnas, lo que equivale a poner un 1 negativo. Pero tambi칠n funciona de esta manera porque formalmente hablando que queremos todas las columnas.

# In[7]:


# Podemos hacer referencia a la 칰ltima fila y a todas las columnas.

data.iloc[-1, :] # start:end, but : refers to all columns


# En este caso, con solo dos puntos vac칤os para las filas, estamos diciendo que queremos todas las filas, pero solo queremos la primera columna, la columna de 칤ndice cero, recuerda que es la fecha, as칤 que obtenemos todas las fechas porque pedimos todas las filas de solo la primera columna.

# In[8]:


# Aqu칤 ":" se refiere a todas las filas.
# para la primera columna referida con 0

data.iloc[:,0]


# Tambi칠n podr칤amos obtener todas las filas para la segunda columna, recuerda que la segunda columna es la fecha de ejecuci칩n, por lo que es de uno a 714.

# In[9]:


# Tambi칠n podr칤amos obtener todas las filas
# y la segunda columna, en el 칤ndice 1

data.iloc[:,1]


# Recuerda, puedes usar la indexaci칩n tanto para las filas como para las columnas. La indexaci칩n es inclusiva del inicio pero hasta el final y sin incluirlo. Entonces en este caso estamos diciendo que queremos las flas dos y tres porque vamos a subir pero sin incluir cuatro, as칤 que estas son las filas dos y tres
# para columnas desde dos hasta el final, que ser칤a la tercera columna hasta el final.
# 
# Como puedes ver obtenemos las filas dos y tres que incluyen el inicio tambi칠n y sin incluir cuatro, las filas dos y tres, y
# obtenemos la segunda posici칩n de 칤ndice de las columnas, que es la tercera columna hasta el final.

# In[10]:


# La indexaci칩n se puede utilizar tanto 
# para las filas como para las columnas

data.iloc[2:4, 2:] # indexing inclusive of start but not the end


# Puedes usar corchetes separados por comas para obtener filasmuy espec칤ficas en columnas muy espec칤ficas. Y que si quisieras
# posiciones de 칤ndice 0, 3, 5 y 7 para filas y posiciones de columna 0, 2 y 4? Y luego puedes ver que eso es exactamente lo que obtenemos:las filas indexadas por esos n칰meros aleatorios
# y luego la primera, tercera y quinta columnas, porque recuerda que la indexaci칩n comienza en cero.

# In[11]:


# Los corchetes entre corchetes se pueden utilizar 
# para hacer referencia a filas y columnas espec칤ficas

data.iloc[[0,3,5,7],[0,2,4]]


# Entonces, iloc es una forma muy espec칤fica de obtener
# datos muy espec칤ficos por fila o por columna.
