#!/usr/bin/env python
# coding: utf-8

# 
# # <p style="color:#2C6A7F">5.1 Terminal Virtual
# 
# ***Autora:  Dra. Alejandra Rougon*** 
# 
# <p style="color:#9D994B"><a rel="license" href="http://creativecommons.org/licenses/by-nc/4.0/"><img alt="Creative Commons License" style="border-width:0" src="https://i.creativecommons.org/l/by-nc/4.0/88x31.png" /></a><br />Este trabajo est치 bajo la licencia <a rel="license" href="http://creativecommons.org/licenses/by-nc/4.0/">Creative Commons Atribuci칩n-NonComercial 4.0 Licencia Internacional</a>.
# 
# 
# > ### <p style="color:#2C6A7F"> 游댌 **Objetivos de Aprendizaje**
# 
# >Despu칠s de completar esta lecci칩n podr치s:
# >
# >* Crear una cuenta de github
# >* Iniciar sesi칩n en una terminal virtual en la plataforma CS50 sandbox
# >* Utilizar las diferentes secciones de la plataforma
# >* Crear un archivo y un directorio en tu terminal en l칤nea
# 
# 
#  [![02.The virtual terminal](https://github.com/alerougon/ObjectStorage/blob/main/PP_CommandLine/MiniaturasVideos/Slide2.png?raw=true)](https://youtube.com/embed/hab9-Mxag1I "02. The virtual Terminal")
# 
# 
# **CS50 sandbox** [https://sandbox.cs50.io/](https://sandbox.cs50.io/) es una plataforma donde podr치s crear y compartir terminales virtuales. Esta plataforma es muy 칰til para aprender a utilizar la l칤nea de comandos. Puedes ir directamente a la plataforma CS50 sandbox y darle presionar el bot칩n ***create*** para abrir una nueva terminal. Tambi칠n puedes ir a una terminal espec칤fica que ya ha sido creada antes. Si creas una nueva los cambios se guardar치n y estar치n ah칤 la siguiente ves que entres a esa terminal. Si entras a una terminal que ya ha sido creada por otra persona los cambios que hagas ser치n eliminados y no estar치n ah칤 la siguiente ves que entres a ella. 
# 
# As칤 es que primero crea una nueva terminal  en
# [CS50 sandbox](https://sandbox.cs50.io/) o entra directamente a una [Terminal virtual](https://bit.ly/3d9BRCG) que ya ha sido creada. 
# 
# Si no has iniciado con tu cuenta en github aparecer치 la siguiente imagen.
# 
# <img src="https://github.com/alerougon/ObjectStorage/blob/main/PP_CommandLine/02.SignInSandbox.png?raw=true" width=400/>
# 
# Si ya tienes una cuenta en github s칩lo inicia sesi칩n y da clic en el enlace de tu [Terminal virtual Terminal](https://bit.ly/3d9BRCG) de nuevo. Sin embargo si no tienes una cuenta s칩lo tienes que crear una.
# 
#  
# <img src="https://github.com/alerougon/ObjectStorage/blob/main/PP_CommandLine/03.CreateAccount.png?raw=true" width=400/>
# 
# S칩lo necesitar치s una cuenta de correo y una contrase침a. Una vez creada puedes iniciar sesi칩n y da clic de nuevo en la [Terminal virtual](https://bit.ly/3d9BRCG)
# 
# La siguiente imagen nos muestra  c칩mo se ve la terminal. En el lado izquierdo hay un 칤cono de una carpeta que abre la barra lateral de directorios. Puedes dar clic en el 칤cono para abrir y cerrar la barra. 
# 
# ![](https://github.com/alerougon/ObjectStorage/blob/main/PP_CommandLine/01.OpenDirSidebar.png?raw=true)
# 
# Esta plataforma tiene tres secciones. Contiene un **editor de texto**, una **terminal** y un **explorador de archivos** tambi칠n llamado ***Filetree** (치rbol de archivos).  Estas tres herramientas son muy 칰tiles para aprender a usar la l칤nea de comandos. Si est치s trabajando en tu computadora ser치 importante que tengas estas tres herramientas abiertas tambi칠n. S칩lo ten en cuenta que algunos editores de texto (eg. Microsoft Word, Text Edit, Libre Office Writer) no funcionar치n; ya que introducen caracteres ocultos. Existen muchos editores buenos disponibles que se utilizan para bioinform치tica. Aqu칤 hay una lista de algunos de los m치s comunes. 
# 
# 
# | Editor de texto | Linux | Mac | Windows | Libre | Comentarios                                |
# |-------------|:-------:|:-----:|:---------:|:------:|-----------------------------------------|
# | [Atom](https://atom.io/)        | x     | x   | x       | x    | Altamente configurable                     |
# | [Gedit](https://wiki.gnome.org/Apps/Gedit)       | x     | x   | x       | x    | Funciones b치sicas                         |
# | [Notepad++](https://notepad-plus-plus.org/)   |       |     | x       | x    | Puede correr en otras plataformas a trav칠s de Wine |
# | [BBEdit](https://www.barebones.com/products/bbedit/)      |       | x   |         |      | Antes TextWrangler            |
# | [Sublime Text](https://www.sublimetext.com/) | x | x | x | x | Aunque tiene licencia, actualmente no tiene un tiempo l칤mite de evaluaci칩n  |
# 
# Esta imagen muestra c칩mo las tres secciones est치n distribuidas en la **terminal virtual**
# 
# 
# ![](https://github.com/alerougon/ObjectStorage/blob/main/PP_CommandLine/04.SandboxParts.png?raw=true)
# 
# Puedes crear **Nuevos Directorios** o **Nuevos Archivos** desde los tres punto en la barra de directorios *Filetree*.
# 
# ![](https://github.com/alerougon/ObjectStorage/blob/main/PP_CommandLine/08.FileDirectory.png?raw=true)
# 
# Con el signo `+` puedes crear archivos, en la parte de arriba, y crear nuevas terminales, en la parte de abajo.
# 
# 
# ![](https://github.com/alerougon/ObjectStorage/blob/main/PP_CommandLine/05.SandboxCreate.png?raw=true)
# 
# Tambi칠n puedes mover para arriba y para abajo la l칤nea de en medio para incrementar o disminuir el tama침o de la pantalla de la terminal o el editor.
# 
# 
# ![](https://github.com/alerougon/ObjectStorage/blob/main/PP_CommandLine/06.BiggerScreen.png?raw=true)
# 
# Ahora vamos a crear un nuevo archivo usando el **editor de texto**. Es importante seguir algunas reglas cuando **nombremos un nuevo archivo**
# 
# 1. No debes usar caracteres especiales como `%`, `췂`,  `*`, `|`, `\`, etc.
# 2. El gui칩n bajo `_` y el punto `.` s칤 est치n permitidos. 
# 3. No debes usar espacios. En lugar de `My file` puedes usar `My_file` o `MyFile`
# 
# La extensi칩n de un archivo no interferir치 en el procesamiento. Si tienes un archivo de texto podr치s trabajar con 칠l en la l칤nea de comando si la extensi칩n es `.txt` o cualquier otra o a칰n sin extensi칩n (`My_file.txt`, `My_file`, `My_file.hello`). Sin embargo, es una buena pr치ctica nombrar un archivo de texto con la extensi칩n `.txt` en caso de que quieras abrirlo con un editor de texto fuera de la l칤nea de comandos. Tambi칠n de esa manera, podr치s ser capaz de reconocer  qu칠 tipo de archivo tienes s칩lo viendo la extensi칩n. En Bioinform치tica trabajar치s con archivos de texto pero que tienen diferentes formatos biol칩gicos. As칤 que es importante agregar la extensi칩n correspondiente al formato biol칩gico (eg. `.fasta`, `.gff3`, `.sam`, etc.).
# 
# Crea un nuevo archivo llamado `Readme.txt` y agrega el siguiente texto  `Este es mi primer archivo de la lecci칩n de l칤nea de comandos de Plants & Python`. No tienes que guardarlo, ya que todo lo que tecleas en esta plataforma se guarda autom치ticamente. En la secci칩n *Filetree* ver치s tu archivo reci칠n creado. Si posicionas el rat칩n en el 치rea de los tres puntitos, encontrar치s las opciones para renombrar (***renaming***), duplicar (***duplicating***), descargar (***downloading), o eliminar (***deleting**) tu archivo. Puedes cerrar tu archivo dando clic en el s칤mbolo `x` en la secci칩n del editor.
# 
#   ![](https://github.com/alerougon/ObjectStorage/blob/main/PP_CommandLine/09.CreateReadme.png?raw=true)
# 
# Ahora crea un nuevo directorio llamado `Documents`. El *Filetree* se ver치 como esto.
# 
#   ![](https://github.com/alerougon/ObjectStorage/blob/main/PP_CommandLine/10.DocFolder.png?raw=true)
# 
# 	Nota: Los directorios tambi칠n pueden ser llamados carpetas o folders.
# ---------
# 
# 游댐 **En esta lecci칩n has aprendido a:**
# 
# * Crear una cuenta de github
# * Iniciar sesi칩n en una terminal virtual en la plataforma CS50 sandbox
# * Utilizar las diferentes secciones de la plataforma
# * Crear un archivo y un directorio en la terminal en l칤nea
# 

# In[ ]:




