#!/usr/bin/env python
# coding: utf-8

# # Lecci√≥n 4.1

# ## C√≥mo evaluar r√°pidamente las propiedades del marco de datos, usando `head` y `tail`
# _____

# ***Mira este video de 2:25 a 4:12***
# 
# Para espa√±ol, haga click en configuraci√≥n, seleccione "espa√±ol" debajo de los subt√≠tulos.
# 
# Traducci√≥n por Guillermo Rodr√≠guez Guerrero (UNAM ENES Le√≥n, M√©xico).

# In[1]:


# Para reproducir el siguiente tutorial, presiona shift + enter

from IPython.display import YouTubeVideo
from datetime import timedelta
start=int(timedelta(hours=0, minutes=2, seconds=25).total_seconds())
end=int(timedelta(hours=0, minutes=4, seconds=12).total_seconds())

YouTubeVideo("jEQRU55x0e4",start=start,end=end,width=640,height=360)


# ***La siguiente es una transcripci√≥n del video.***

# > üí° ***Recuerde:*** Importe `pandas` y lea el conjunto de datos a continuaci√≥n para completar esta lecci√≥n

# In[2]:


# Importe pandas

import pandas as pd


# In[3]:


# Decargue el conunto de datos del
# Jupyter Book para leer localmente o
# leer desde GitHub, a continuaci√≥n:

data = pd.read_csv('https://raw.githubusercontent.com/DanChitwood/PlantsAndPython/master/co2_mlo_weekly.csv')


# Ahora veamos c√≥mo mirar nuestro marco de datos usando "head" y "tail".
# 
# Por lo tanto, es importante saber con qu√© se est√° trabajando 
# para ver el marco de datos y "head" y "tail" nos permite hacer eso. As√≠ que recuerda que los datos se almacenan en el objeto data y usamos ".head" y lo que veremos es una vista previa de las primeras cinco filas y tambi√©n obtendremos los nombres de las columnas.

# In[4]:


# Es importante saber con qu√© est√°s trabajando
# para "ver" el marco de datos
# .head() muestra las primeras filas y los nombres de las columnas

data.head()


# Tambi√©n podemos usar "tail". Y "tail", si "head" est√° al principio, entonces "tail" es el final. Y puedes ver que obtenemos las √∫ltimas filas de nuestro conjunto de datos. "tail" es muy √∫til para ver solo cu√°ntas filas tienes en total. Recuerda que comenzamos con cero, entonces tenemos 714 filas o puntos de datos en este conjunto de datos.

# In[5]:


# .tail() muestra las √∫ltimas filas

data.tail()


# "Describe" es una funci√≥n muy √∫til que te devuelve estad√≠sticas resumidas para tus variables continuas. Entonces, si usamos "describe" en nuestros datos, lo que obtenemos es la fecha de ejecuci√≥n, que fue solo desde el d√≠a uno hasta el 714, un n√∫mero que aumenta para realizar un seguimiento del d√≠a; el a√±o se incluye como una variable continua, aunque no queremos que sea una variable continua; y partes de CO2 por mill√≥n, es, por supuesto, una variable continua. Obtenemos cu√°nto de cada uno tenemos. Tenemos 714 de cada uno. Obtenemos la media de cada uno; la desviaci√≥n est√°ndar; el m√≠nimo; los cuartiles en el 25,
# 50 y 75, cuartiles; y el valor m√°ximo tambi√©n. 

# In[6]:


# .describe() es muy √∫til, muestra estad√≠sticas resumidas
# proporciona estad√≠sticas para variables continuas

data.describe() 


# As√≠ es como se lee en un marco de datos,
# c√≥mo mirar r√°pidamente el marco de datos y obtener 
# estad√≠sticas resumidas de las variables continuas.
