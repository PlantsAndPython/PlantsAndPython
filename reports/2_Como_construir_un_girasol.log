Traceback (most recent call last):
  File "/home/sourabh/miniconda3/envs/jbook/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/sourabh/miniconda3/envs/jbook/lib/python3.8/site-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/sourabh/miniconda3/envs/jbook/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/sourabh/miniconda3/envs/jbook/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/home/sourabh/miniconda3/envs/jbook/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/home/sourabh/miniconda3/envs/jbook/lib/python3.8/site-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/home/sourabh/miniconda3/envs/jbook/lib/python3.8/site-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/sourabh/miniconda3/envs/jbook/lib/python3.8/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Completa el c√≥digo siguiente para crear una animaci√≥n de c√≥mo crecen los floretes en un girasol
# Presta atenci√≥n a ambos loops y cual es el prop√≥sito de cada uno
# Presta atenci√≥n a los √≠ndices de cada lista
# Observa como se usa la funci√≥n .reverse()
# Observa como el c√≥digo crea una animaci√≥n cuadro por cuadro del crecimiento de un girasol

# Escribe tu respuesta

# Importes para animar el resultado
from IPython.display import display, clear_output
import time  

# Para la animaci√≥n, debemos de establecer un canvas/figure
fig = plt.figure()

for i in range(len(radii)):

    xlist = []
    ylist = []
    
    # Aqu√≠ seleccionamos los thetas del momento
    current_thetas = thetPs[0:(i+1)]
    
    # Aqu√≠ seleccionamos los radios correspondientes a los thetas anteriores
    # Cada vez que iteramos el loop, esta lista va de menor a mayor
    
    current_radii = radii[0:(i+1)]
    # Por ello, debemos de revertir el orden
    # De ese modo, los valores ahora van de mayor a menor
    # Los floretes con los primeros thetas deben de corresponder a los radios m√°s amplios
    
    current_radii.reverse()

    for n in range (i+1): 
        
        # Para cada florete n, calcula r y theta, coordenadas x e y
        # a√±ade las coordenadas a listas respectivas

        
        
        
        
        
        
        
    # Hemos salido del loop interno
    # Estamos de vuelta en el loop externo
    

    
    # Usa el c√≥digo previo para graficar el girasol
    
    
    
    # Con estas l√≠neas creamos una animaci√≥n
    time.sleep(0.001) 
    clear_output(wait=True)
    display(fig)
    fig.clear()

# Closes the figure animation once complete
# plt.close()
------------------

[0;36m  File [0;32m"/tmp/ipykernel_43100/4290839089.py"[0;36m, line [0;32m56[0m
[0;31m    time.sleep(0.001)[0m
[0m    ^[0m
[0;31mIndentationError[0m[0;31m:[0m expected an indented block

IndentationError: expected an indented block (4290839089.py, line 56)

